在Threejs中，光源用Light表示，它是所有光源的基类。它的构造函数是：

THREE.Light ( hex )
Var redLight = new THREE.Light(0xFF0000);
它有一个参数hex，接受一个16进制的颜色值

THREE.Light只是其他所有光源的基类，要让光源除了具有颜色的特性之外，我们需要其他光源。

环境光，当你仅为场景指定环境光时，所有的物体无论法向量如何，都将表现为同样的明暗程度。
THREE.AmbientLight( hex )

点光源：由这种光源放出的光线来自同一点，且方向辐射自四面八方。例如蜡烛放出的光，萤火虫放出的光。
	PointLight( color, intensity, distance )
		Color：光的颜色
		Intensity：光的强度，默认是1.0,就是说是100%强度的灯光，
		distance：光的距离，从光源所在的位置，经过distance这段距离之后，
		光的强度将从Intensity衰减为0。 默认情况下，这个值为0.0，表示光源强度不衰减。

聚光灯：这种光源的光线从一个锥体中射出，在被照射的物体上产生聚光的效果。
使用这种光源需要指定光的射出方向以及锥体的顶角α。
      THREE.SpotLight( hex, intensity, distance, angle, exponent )
                Hex：聚光灯发出的颜色，如0xFFFFFF
                Intensity：光源的强度，默认是1.0，如果为0.5，则强度是一半，
                意思是颜色会淡一些。和上面点光源一样。
                Distance：光线的强度，从最大值衰减到0，需要的距离。 默认为0，
                表示光不衰减，如果非0，则表示从光源的位置到Distance的距离，
	光都在线性衰减。到离光源距离Distance时，光源强度为0.
	Angle：聚光灯着色的角度，用弧度作为单位，这个角度是和光源的方向形成的角度。
	exponent：光源模型中，衰减的一个参数，越大衰减约快。

平行光又称为方向光（Directional Light），是一组没有衰减的平行的光线，类似太阳光的效果。
	THREE.DirectionalLight = function ( hex, intensity )
		Hex：关系的颜色，用16进制表示
		Intensity：光线的强度，默认为1。因为RGB的三个值均在0~255之间，不能反映出光照的强度变化，光照越强，物体表面就更明亮。

在三维空间中为了确定一条直线的方向只需要确定直线上两个点的坐标即可，所以Threejs平行光提供了位置.position和目标.target两个属性来一起确定平行光方向。目标.target的属性值可以是Threejs场景中任何一个三维模型对象，比如一个网格模型Mesh，这样Threejs计算平行光照射方向的时候，会通过自身位置属性.position和.target表示的物体的位置属性.position计算出来。

// 平行光
var directionalLight = new THREE.DirectionalLight(0xffffff, 1);
// 设置光源的方向：通过光源position属性和目标指向对象的position属性计算
directionalLight.position.set(80, 100, 50);
// 方向光指向对象网格模型mesh2，可以不设置，默认的位置是0,0,0
directionalLight.target = mesh2;
scene.add(directionalLight);