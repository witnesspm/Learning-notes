slice(0,1)//数组截取

splice(1,1)//数组删除,从下标为1的位置删除一个

split("a")//将字符串拆成数组，每遇到a拆一组，参数可以写正则表达式

join("")//数组合并

var str =prompt("请输入你的用户名：");浏览器弹出输入窗口，str接收输入的数据

replace(条件值，替换内容) 方法用于在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串。

正则表达式.exec(字符串)//返回一个数组，此数组的第 0 个元素是与正则表达式相匹配的文本，第 1 个元素是与 RegExpObject 的第 1 个子表达式相匹配的文本（如果有的话），第 2 个元素是与 RegExpObject 的第 2 个子表达式相匹配的文本（如果有的话），以此类推。除了数组元素和 length 属性之外，exec() 方法还返回两个属性。index 属性声明的是匹配文本的第一个字符的位置。input 属性则存放的是被检索的字符串 string。我们可以看得出，在调用非全局的 RegExp 对象的 exec() 方法时，返回的数组与调用方法 String.match() 返回的数组是相同的。




包装类//将基本数据类型转为对象
String()
Number()
Boolean()
例var num = new Number(3)



正则表达式

var 变量 = new RegExp("正则表达式","匹配模式");//匹配模式：i忽略大小写，g全局匹配模式
例：
var reg = new RegExp("a");
var str = "a";
var result=reg.test(str)//返回true，测试字符串符不符合正则


用字面量来创建正则表达式
var 变量 =/正则表达式/匹配模式


正则语法
a|b,[ab]都是a或b的意思
[a-z]任意小写字母
[0-9]任意数字
[^a]除了a都行
a{3}设置a出现三次
a{1,3}设置a出现1到3次
a{3,}设置a出现3次及以上
(ab)表示ab是一个,例(ab){3}意思是ababab
a+至少有一个a
a*零个或多个
a?零个或一个
^a必须以a开头
a$必须以a结尾
^a$只能为a
^a|a$以a开头或者以a结尾
.任意字符
\转义字符，例\.表示单纯的.
\w任意字母，数字，下划线
\W除了任意字母，数字，下划线
\d任意数字
\D除了任意数字
\s空格
\S除了空格
\b单词边界，例，检测abs，aabsd不可以，但是a abs d可以
\B除了单词边界






